要求:
1. 做一个服务框架,以线程池为基础,分解的功能作为一个个task运行其中,最为关键的是task之间可以很方便的进行通信,以数据驱动,只有数据耦合.
2. 性能要好.

特点:
1. 线程池做基础,线程间只有数据通信,只有数据耦合,功能解耦
2. 任务分为普通IndependentTask(自驱,不需外界通信，运行完即销毁)和InteractiveTask(task间需要通信，而且通常常驻运行)
3. InteractiveTask之间能够方便的通信,两种Task都能随时生成其他task
4. 使用eventfd作为线程间消息通知机制,可以方便的与网络IO统一处理
5. 使用池化技术（对象池）提高性能和避免内存碎片//to-do
6. 线程间消息队列使用无锁环形队列，提高性能。
7. 使用智能指针观察指针生命周期同时减少锁的粒度，比如访问在ConcurrentHashMap的value使用智能指针，
   对指针的相关操作不需要在获得锁期间进行。


改进：
1. 每个线程一个eventfd，作为thread-local变量。不用每个task去生成一次。
2. 边沿触发，读尽可能多的数据，区分于先读头再读body的形式。